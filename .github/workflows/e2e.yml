name: End to End Example Apps

on:
    push:
        branches: ['main']
    pull_request:
        types: [opened, synchronize]

concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
    e2e-docker:
        name: E2E Dockerized Apps
        timeout-minutes: 60
        runs-on: ubuntu-latest
        strategy:
            matrix:
                app: ['dotnet', 'dotnet4', 'go', 'python', 'ruby']

        steps:
            - uses: actions/checkout@v4

            - name: Install poetry
              run: pipx install poetry

            - name: Install python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'
                  cache: 'poetry'

            - name: Install dependencies
              working-directory: ./e2e/tests
              run: poetry install --all-extras

            - name: Login to Docker Hub
              if: github.event.pull_request.head.repo.full_name == 'highlight/highlight' || github.ref == 'refs/heads/main'
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Login to GitHub Docker
              if: github.event.pull_request.head.repo.full_name == 'highlight/highlight' || github.ref == 'refs/heads/main'
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: Vadman97
                  password: ${{ secrets.GH_DOCKER_TOKEN }}

            - name: Start docker containers & run sdk e2e test
              working-directory: ./e2e/tests/src
              run: poetry run python app_runner.py ${{ matrix.app }}
